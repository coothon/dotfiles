### See https://github.com/be5invis/Iosevka/blob/master/doc/custom-build.md for comprehensive 
### documentation of the options in this file

[buildPlans.iosevka-custom]      # <iosevka-custom> is your plan name
family = "Iosevka Custom"        # Font menu family name
spacing = "term"               # Optional; Values: `normal`, `term`, `fontconfig-mono`, or `fixed`
serifs = "sans"                  # Optional; Values: `sans` or `slab`
export-glyph-names = true       # Set this to true for ligature support in Kitty (increased file size)

webfont-formats = ['ttf', 'woff2']

###################################################################################################
# Configure variants

# Optional; Whether to inherit a `ss##` variant
[buildPlans.iosevka-custom.variants]
inherits = "ss02"

# Optional; Configure single character's variant
[buildPlans.iosevka-custom.variants.design]
capital-a = 'straight-tri-serifed'
capital-b = 'standard-bilateral-serifed'
capital-c = 'bilateral-serifed'
capital-d = 'more-rounded-bilateral-serifed'
capital-e = 'serifed'
capital-f = 'serifed'
capital-g = 'toothed-serifed-capped'
capital-h = 'serifed'
capital-i = 'short-serifed'
capital-j = 'serifed-symmetric'
capital-k = 'straight-serifed'
capital-l = 'serifed'
capital-m = 'hanging-motion-serifed'
capital-n = 'motion-serifed'
capital-p = 'closed-motion-serifed'
capital-q = 'crossing'
capital-r = 'standing-motion-serifed'
capital-s = 'bilateral-inward-serifed'
capital-t = 'serifed'
capital-u = 'motion-serifed'
capital-v = 'straight-motion-serifed'
capital-w = 'straight-motion-serifed'
capital-x = 'straight-serifed'
capital-y = 'straight-serifed'
capital-z = 'straight-serifed-with-crossbar'
a = 'double-storey-tailed'
b = 'toothed-motion-serifed'
c = 'unilateral-serifed'
d = 'toothed-serifed'
e = 'flat-crossbar'
f = 'serifed'
g = 'double-storey'
h = 'straight-motion-serifed'
i = 'serifed'
j = 'serifed'
k = 'curly-serifed'
l = 'serifed'
m = 'top-left-serifed'
n = 'tailed-motion-serifed'
p = 'motion-serifed'
q = 'straight-motion-serifed'
r = 'serifed'
s = 'bilateral-serifed'
t = 'standard'
u = 'tailed-motion-serifed'
v = 'straight-motion-serifed'
w = 'straight-motion-serifed'
x = 'straight-serifed'
y = 'cursive-motion-serifed'
z = 'straight-serifed-with-crossbar'
zero = 'slashed'
one = 'base'
two = 'curly-neck'
three = 'flat-top'
four = 'semi-open'
five = 'vertical-upper-left-bar'
six = 'open-contour'
seven = 'curly-crossbar-serifed'
eight = 'crossing-asymmetric'
nine = 'closed-contour'
tilde = 'low'
asterisk = 'hex-low'
paren = 'flat-arc'
brace = 'curly-flat-boundary'
number-sign = 'slanted-open-tall'
ampersand = 'flat-top'
at = 'fourfold-tall'
dollar = 'interrupted'
cent = 'through'
percent = 'rings-segmented-slash'
ascii-single-quote = 'raised-comma'
ascii-grave = 'raised-inverse-comma'
question = 'corner'
punctuation-dot = 'round'
lig-ltgteq = 'flat'
lig-equal-chain = 'with-notch'
lig-hyphen-chain = 'with-notch'
lig-double-arrow-bar = 'with-notch'
lig-single-arrow-bar = 'with-notch'


# Optional; Configure single character's variant for Upright and Oblique; Overrides [design]
[buildPlans.iosevka-custom.variants.upright]
capital-a = 'straight-tri-serifed'
capital-b = 'standard-bilateral-serifed'
capital-c = 'bilateral-serifed'
capital-d = 'more-rounded-bilateral-serifed'
capital-e = 'serifed'
capital-f = 'serifed'
capital-g = 'toothed-serifed-capped'
capital-h = 'serifed'
capital-i = 'short-serifed'
capital-j = 'serifed-symmetric'
capital-k = 'straight-serifed'
capital-l = 'serifed'
capital-m = 'hanging-motion-serifed'
capital-n = 'motion-serifed'
capital-p = 'closed-motion-serifed'
capital-q = 'crossing'
capital-r = 'standing-motion-serifed'
capital-s = 'bilateral-inward-serifed'
capital-t = 'serifed'
capital-u = 'motion-serifed'
capital-v = 'straight-motion-serifed'
capital-w = 'straight-motion-serifed'
capital-x = 'straight-serifed'
capital-y = 'straight-serifed'
capital-z = 'straight-serifed-with-crossbar'
a = 'double-storey-tailed'
b = 'toothed-motion-serifed'
c = 'unilateral-serifed'
d = 'toothed-serifed'
e = 'flat-crossbar'
f = 'serifed'
g = 'double-storey'
h = 'straight-motion-serifed'
i = 'serifed'
j = 'serifed'
k = 'curly-serifed'
l = 'serifed'
m = 'top-left-serifed'
n = 'tailed-motion-serifed'
p = 'motion-serifed'
q = 'straight-motion-serifed'
r = 'serifed'
s = 'bilateral-serifed'
t = 'standard'
u = 'tailed-motion-serifed'
v = 'straight-motion-serifed'
w = 'straight-motion-serifed'
x = 'straight-serifed'
y = 'cursive-motion-serifed'
z = 'straight-serifed-with-crossbar'
zero = 'slashed'
one = 'base'
two = 'curly-neck'
three = 'flat-top'
four = 'semi-open'
five = 'vertical-upper-left-bar'
six = 'open-contour'
seven = 'curly-crossbar-serifed'
eight = 'crossing-asymmetric'
nine = 'closed-contour'
tilde = 'low'
asterisk = 'hex-low'
paren = 'flat-arc'
brace = 'curly-flat-boundary'
number-sign = 'slanted-open-tall'
ampersand = 'flat-top'
at = 'fourfold-tall'
dollar = 'interrupted'
cent = 'through'
percent = 'rings-segmented-slash'
ascii-single-quote = 'raised-comma'
ascii-grave = 'raised-inverse-comma'
question = 'corner'
punctuation-dot = 'round'
lig-ltgteq = 'flat'
lig-equal-chain = 'with-notch'
lig-hyphen-chain = 'with-notch'
lig-double-arrow-bar = 'with-notch'
lig-single-arrow-bar = 'with-notch'

# Optional; Configure single character's variant for Italic only; Overrides [design]
[buildPlans.iosevka-custom.variants.italic]
capital-a = 'straight-tri-serifed'
capital-b = 'standard-bilateral-serifed'
capital-c = 'bilateral-serifed'
capital-d = 'more-rounded-bilateral-serifed'
capital-e = 'serifed'
capital-f = 'serifed'
capital-g = 'toothed-serifed-capped'
capital-h = 'serifed'
capital-i = 'short-serifed'
capital-j = 'serifed-symmetric'
capital-k = 'straight-serifed'
capital-l = 'serifed'
capital-m = 'hanging-motion-serifed'
capital-n = 'motion-serifed'
capital-p = 'closed-motion-serifed'
capital-q = 'crossing'
capital-r = 'standing-motion-serifed'
capital-s = 'bilateral-inward-serifed'
capital-t = 'serifed'
capital-u = 'motion-serifed'
capital-v = 'straight-motion-serifed'
capital-w = 'straight-motion-serifed'
capital-x = 'straight-serifed'
capital-y = 'straight-serifed'
a = 'double-storey-tailed'
b = 'toothed-motion-serifed'
c = 'unilateral-serifed'
d = 'toothed-serifed'
e = 'flat-crossbar'
f = 'serifed'
g = 'double-storey'
h = 'straight-motion-serifed'
j = 'serifed'
m = 'top-left-serifed'
n = 'tailed-motion-serifed'
p = 'motion-serifed'
q = 'straight-motion-serifed'
r = 'serifed'
s = 'bilateral-serifed'
t = 'standard'
u = 'tailed-motion-serifed'
y = 'cursive-motion-serifed'
z = 'straight-serifed-with-crossbar'
capital-z = 'cursive'
k = 'diagonal-tailed-cursive-top-left-serifed'
w = 'cursive-motion-serifed'
v = 'cursive-serifed'
x = 'cursive'
i = 'tailed-serifed'
l = 'tailed-serifed'
zero = 'slashed'
one = 'base'
two = 'curly-neck'
three = 'flat-top'
four = 'semi-open'
five = 'vertical-upper-left-bar'
six = 'open-contour'
seven = 'curly-crossbar-serifed'
eight = 'crossing-asymmetric'
nine = 'closed-contour'
tilde = 'low'
asterisk = 'hex-low'
paren = 'flat-arc'
brace = 'curly-flat-boundary'
number-sign = 'slanted-open-tall'
ampersand = 'flat-top'
at = 'fourfold-tall'
dollar = 'interrupted'
cent = 'through'
percent = 'rings-segmented-slash'
ascii-single-quote = 'raised-comma'
ascii-grave = 'raised-inverse-comma'
question = 'corner'
punctuation-dot = 'round'
lig-ltgteq = 'flat'
lig-equal-chain = 'with-notch'
lig-hyphen-chain = 'with-notch'
lig-double-arrow-bar = 'with-notch'
lig-single-arrow-bar = 'with-notch'

# End variant section
###################################################################################################

###################################################################################################
# Configure ligations

[buildPlans.iosevka-custom.ligations]
inherits = "default-calt"   # Optional; inherits an existing ligation set
disables = []               # Optional; disable specific ligation groups, overrides inherited ligation set
enables  = ["center-ops", "arrow", "arrow2", "trig", "eqeqeq", "eqeq", "ineq", "exeqeqeq", "exeqeq", "eqexeq", "exeq", "ltgt-diamond-tag", "ltgt-slash-tag", "plusplus", "kern-dotty", "kern-bars", "logic", "llgg", "llggeq", "lteq-as-arrow", "gteq-as-co-arrow", "html-comment", "brace-bar", "brack-bar", "connected-underscore", "connected-number-sign", "connected-tilde-as-wave", "connected-hyphen"]               # Optional; enable specific ligation groups, overrides inherited ligation set

# End ligation section
###################################################################################################


###################################################################################################
# Override default building weights
# When buildPlans.<plan name>.weights is absent, all weights would built and mapped to
# default values.
# IMPORTANT : Currently "menu" and "css" property only support numbers between 0 and 1000.
#             and "shape" properly only supports number between 100 and 900 (inclusive).
#             If you decide to use custom weights you have to define all the weights you
#             plan to use otherwise they will not be built.
[buildPlans.iosevka-custom.weights.regular]
shape = 400  # Weight for glyph shapes.
menu  = 400  # Weight for the font's names.
css   = 400  # Weight for webfont CSS.

[buildPlans.iosevka-custom.weights.book]
shape = 450
menu  = 450  # Use 450 here to name the font's weight "Book"
css   = 450

[buildPlans.iosevka-custom.weights.bold]
shape = 700
menu  = 700
css   = 700

# End weight section
###################################################################################################

###################################################################################################
# Override default building slope sets
# When this section is absent, all slopes would be built.

[buildPlans.iosevka-custom.slopes.upright]
angle = 0             # Angle in degrees. Valid range [0, 15]
shape = "upright"     # Slope grade used for shape selection.  `upright` | `oblique` | `italic`
menu  = "upright"     # Slope grade used for naming.           `upright` | `oblique` | `italic`
css   = "normal"      # Slope grade used for webfont CSS.      `normal`  | `oblique` | `italic`

[buildPlans.iosevka-custom.slopes.oblique]
angle = 9.4
shape = "oblique"
menu  = "oblique"
css   = "oblique"

[buildPlans.iosevka-custom.slopes.italic]
angle = 9.4
shape = "italic"
menu  = "italic"
css   = "italic"
# End slope section
###################################################################################################

###################################################################################################
# Override default building widths
# When buildPlans.<plan name>.widths is absent, all widths would built and mapped to
# default values.
# IMPORTANT : Currently "shape" property only supports numbers between 434 and 664 (inclusive),
#             while "menu" only supports integers between 1 and 9 (inclusive).
#             The "shape" parameter specifies the unit width, measured in 1/1000 em. The glyphs'
#             width are equal to, or a simple multiple of the unit width.
#             If you decide to use custom widths you have to define all the widths you plan to use,
#             otherwise they will not be built.

[buildPlans.iosevka-custom.widths.normal]
shape = 500        # Unit Width, measured in 1/1000 em.
menu  = 5          # Width grade for the font's names.
css   = "normal"   # "font-stretch' property of webfont CSS.

[buildPlans.iosevka-custom.widths.extended]
shape = 600
menu  = 7
css   = "expanded"

# End width section
###################################################################################################

###################################################################################################
# Character Exclusion
# Specify character ranges in the section below to exclude certain characters from the font being
# built. Remove this section when this feature is not needed.

[buildPlans.iosevka-custom.exclude-chars]
ranges = [[10003, 10008]]

# End character exclusion
###################################################################################################

###################################################################################################
# Compatibility Ligatures
# Certain applications like Emacs does not support proper programming liagtures provided by
# OpenType, but can support ligatures provided by PUA codepoints. Therefore you can edit the
# following section to build PUA characters that are generated from the OpenType ligatures.
# Remove this section when compatibility ligatures are not needed.

[[buildPlans.iosevka-custom.compatibility-ligatures]]
unicode = 57600 # 0xE100
featureTag = 'calt'
sequence = '<*>'

# End compatibility ligatures section
###################################################################################################

###################################################################################################
# Metric overrides
# Certain metrics like line height (leading) could be overridden in your build plan file.
# Edit the values to change the metrics. Remove this section when overriding is not needed.

[buildPlans.iosevka-custom.metric-override]
leading = 1250
winMetricAscenderPad = 0
winMetricDescenderPad = 0
powerlineScaleY = 1
powerlineScaleX = 1
powerlineShiftY = 0
powerlineShiftX = 0

# End metric override section
###################################################################################################
